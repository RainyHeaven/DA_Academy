# [문제1] x변수에 1,3,5,7,9 값을 입력, y 변수에 1,2,3,4,5 값을 입력하세요.
x <- c(1,3,5,7,9)
y <- c(1,2,3,4,5)

# [문제2] x 변수와 y 변수를 중복성 없이 하나로 합친후에 u 변수에 넣어 주세요.
u <- sort(union(x,y), decreasing = FALSE)
u
# [문제3] x 변수와 y 변수의 값들중에 중복성만 추출해서 i 변수에 넣어주세요.
i <- intersect(x,y)

# [문제4] x 변수의 값과 y 변수의 값중에 순수하게 x 변수에 들어 있는 값만 추출해서 m 변수에 넣어 주세요.
m <- setdiff(x, y)
m
# [문제5] x 변수의 값과 y 변수의 값이 일치가 되면 TRUE 아니면 FALSE를 출력해주세요.
identical(x, y)

# [문제6] x 변수에 값들을 10을 곱한 결과를 x 변수에 적용하세요.
x <- x * 10

# [문제7] x 변수에 있는 50을 5로 수정하세요.
x
x[3] <- 5

# [문제8]  x 변수에 있는 10 30  5 70 90을  원래의 값으로 1,3,5,7,9로 되돌려 주세요.단 union, 정수 나누기, sort 만 사용하세요
x <- c(10, 30, 5, 70, 90)
x <- sort(union((x[-3]%/%10), x[3]))

x[which(5 == x)] <- 50
x <- x%/%10
x
# [문제9] x변수에 11숫자를 제일 뒤에 입력하세요. 단 append와 length를 이용하세요.
append(x, 11, after=length(x))

# [문제10] x 변수에 제일 뒤에 있는 값을 NA로 수정하세요. 단 length를 이용하세요.
x[length(x)] <- NA

# [문제11] lst 변수에 name = 'king' , height = 180, weight = 70 값을 넣어 주세요.
lst <- list(name = 'king', height = 180, weight = 70)
lst

# [문제12] lst 변수에  blood = 'A' 추가하세요.
lst$blood <- 'A'
lst

# [문제13] lst 변수에 name의 값을 'scott'로 수정하세요.
lst$name <- 'scott'

# [문제14] lst변수에 2번인덱스 값만 출력해주세요.
lst[[2]]

# [문제15] lst변수에 blood 이름을 blood type 이름으로 수정하세요.
names(lst) <- c('name', 'height', 'weight', 'blood type')
names(lst)[4] <- 'blood type'
lst

# [문제16] x 변수에 벡터값 1,2,3,5,6 을 입력한 후 3번째 요소 뒤에 4를 입력하세요.
x <- c(1,2,3,5,6)
x <- append(x, 4, after = 3)

# [문제17] 1부터  3씩 증가하는 10 이하의 정수값을 출력하세요.
seq(1, 10, 3)
seq(1, 10, length.out=100) #length.out = x : x개만큼 등분

# [문제18] 10 부터 20 까지의 값을 x 변수에 생성한 후 원소의 값이 15 이상이고 18 이하인 값들만 출력하세요.
x <- c(10:20)
x[which(15 <= x & 18 >= x)]

# [문제19] 10 부터 20 까지의 값을 x 변수에 생성한 후 원소의 값이 15 이상이고 18 이하인 값들만 2곱한 값으로 수정하세요.
x <- c(10:20)
x[which(15 <= x & 18 >= x)] <- x[which(15 <= x & 18 >= x)]*2

# [문제20] x 변수에 행렬을 구성하세요. 값은 1부터 10까지 입력하시고 5행 2열으로 만들면서 값은 열을 기준으로 생성하세요.
x <- matrix(c(1:10), nrow=5, byrow=FALSE)

#[문제21] x 변수에 열을 기준으로 11,12,13,14,15 값을 추가하세요.
x <- cbind(x, c(11:15))
x
# [문제22] x 변수에 행을 기준으로 16,17,18 값을 추가하세요.
x <- rbind(x, c(16:18))
x

# [문제23] x변수에 6행의 값을 20,21,22 로 수정하세요.
x[6,] <- c(20:22)
x

# [문제24] x 변수에 6행을 제거해주세요.
x <- x[-6,]
x

# [문제25] x 배열을 생성하세요. 1부터 12까지 값을 가지고있는 배열을 생성하세요. 면은 3개가 만들어지도록하세요.
x <- array(c(1:12), dim=c(2,2,3))
x <- array(1:12, dim=c(2,2,3))

#[문제26] x 배열 변수에 컬럼이름은 'a','b'로 설정하세요.
colnames(x) <- c('a','b')

#[문제27] x 배열 변수에 행이름은 'row1','row2'로 설정하세요.
rownames(x) <- c('row1','row2')

#[문제28] x 배열 변수에 면을 2로 수정하세요.
dim(x) <- c(3,2,2)
x

# [문제29] 벡터에 있는 값 "large", "medium", "small", "small", "large", "medium" 을 factor 변수로 구성하세요. 
# 변수이름은x로 생성하시고 levels samall, medium, large 순으로 지정하세요.
x <- factor(c('large','medium','small','small','large','medium'), levels=c('small', 'medium','large'),ordered=TRUE)
x

#[문제30] x factor형 목록이름중에 small 을 s로 수정하세요.
levels(x)[1] <- 's'
levels(x)[levels(x) == 'small'] <- 's'
x

# [문제31] 아래와 같은 모양의 변수를 생성하세요. 변수 이름은 df로 하세요.
# <화면출력>
# df
# name sql  plsql
# 1  king  96     75
# 2 smith  82     91
# 3  jane  78     86
df <- data.frame(name=c('king','smith','jane'), sql=c(96, 82, 78), plsql=c(75, 91, 86), stringsAsFactors=FALSE)
df

# [문제32] df변수에 james, 90, 80 추가 해주세요.
# <화면출력>
# > df
# name sql plsql
# 1  king  96    75
# 2 smith  82    91
# 3  jane  78    86
# 4 james  90    80
df[4,] <- c('james', 90, 80)
df
df <- rbind(df, c('james',90,80))
df <- rbind(df, data.frame(name='james',sql=90,plsql=80))

# [문제33] james에 대한 row 정보만 출력하세요.
# <화면출력>
# name sql plsql  r
# 4 james  90    80 60
df[df$name=='james',]