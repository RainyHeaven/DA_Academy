[문제1] x,y 변수에 있는 값을 기준으로 수행한 결과 입니다.
x 와 y 변수에 어떤 값이 있어야 하나요.
또한 결과값이 나오기 위해서 어떤 계산식을 만들어야 하는지 계산식을 만들어 보세요.

result_1 =  7
result_2 =  3
result_3 =  -3
result_4 =  10
result_5 =  0.4
result_6 =  0
result_7 =  2
result_8 =  32
result_9 =  7.0
result_10 =  -21
result_11 =  50
result_12 =  29
x+y=7
x−y=3
2x=10

x= 5
y = 2

result_1 = 7 
result_2 = 3
result_3 = - result_2
result_4 = result_1 + result_2
result_5 =  ((result_2*result_2 - result_1)*result_1 - (result_4))*(1/(result_4))
result_6 = 0
result_7 = result_2*result_2 - result_1
result_8 = (result_1 - result_7)*result_1 - result_2
result_9 = (result_1)/result_4*result_4
result_10 = result_1*result_3
result_11 = (result_4-result_7)*result_1 - result_7*result_2
result_12 = result_8-result_2
[문제2] vstr 변수에 이 문자열을 입력하세요.
v_str = "시간은 멈추지 않습니다. 하루를 유익하게 살아야합니다."

"시간은 멈추지 않습니다." 만 출력해주세요
"하루를 유익하게 살아야합니다." 만 출력해주세요
"살아야합니다." 만 출력해주세요
"시추니루하야" 이 글자만 출력해주세요.
"시간은 멈추지 않습니다. 하루를 유익하게" 만 출력해주세요.
v_str 문자열을 뒤순으로 출력해 주세요.
print(v_str[:13]) 
print(v_str[14:]) 
print(v_str[-7:]) 
print(v_str[::5]) 
print(v_str[:-8]) 
print(v_str[::-1])

[문제3]

>>> x = '파리썬'
>>> x
'파리썬'
인덱스를 이용해서 리 -> 이로 변환하세요.

x = x[0]+'이'+x[2]

x = x.replace('리', '이')

a = 'a b c d e f g' 변수에 문자열이 들어 있습니다. 다음을 수행하세요.
[문제4] a 변수에 있는 문자의 갯수를 구하세요.

a = 'a b c d e f g'
len(a)
13개

[문제5] a 변수에 공백문자 갯수를 구하세요.

a = 'a b c d e f g'
a.count(' ')
6개

[문제6] a 변수 안에 있는 공백문자를 제외한 갯수를 구하세요.

len(a.split())
7개

[문제7] a 변수에 있는 공백문자를 제거한 후 b 변수에 넣어주세요

a = 'a b c d e f g'
b = a.replace(' ', '')
[문제8] a 변수에 있는 문자를 분리한 후 c 변수에 넣어주세요.
c = a.split()

[문제9] c 변수에 있는 문자를 합쳐서 자신의 변수에 다시 넣어주세요.
c = ''.join(c)

아래와 같은 문자데이터가 있습니다.
url = 'http://www.python.org'
[문제10] http:// 제거한 후 url 변수에 넣어 주세요.

url = 'http://www.python.org'
url = url[7:]
url = url.replace('http://', '')
[문제11] url변수에 있는 문자 데이터에 '.'을 기준으로 분리하세요.

url = 'http://www.python.org'
url = url.split('.')
[문제12] url변수에 있는 문자데이터를 www.python.org 모양으로 만드세요.
url = '.'.join(url)

[문제13] url변수에 있는 문자데이터를 대문자로 변환하세요.
url.upper()

[문제14] url변수에 있는 문자데이터를 소문자로 변환하세요.
url.lower()

[문제15] 반복문을 사용하지 않고 * 를 가로 100개 출력
print('*'*100)

[문제16] 반복문을 사용하지 않고 * 를 세로 10개 출력
print('*\n'*10)

[문제17] day 변수에 20180905를 입력하세요. 화면 출력은 2018년 09월 05일 출력하세요.

day = '20180905'
print(day[0:4]+'년 '+day[4:6]+'월 '+day[6:]+'일')
food 변수 아래와 같이 데이터가 들어 있습니다.food변수를 생성하시고 문제를 풀어보세요.

>>> food[0]
['김밥', '라면', '오뎅']
>>> food[1]
['비빔밥', '김치찌게']
>>> food[2]
['자장면', '짬뽕']
[문제18] 1번 index에 청국장 추가 하세요

food = [['김밥', '라면', '오뎅'], ['비빔밥', '김치찌게'], ['자장면','짬뽕']]
food[1].append('청국장')
[문제19] 2번 index에 탕수육 추가하세요.
food[2].append('탕수육')

[문제20] 0번 index에 있는 오뎅 삭제하세요.
food[0].remove('오뎅')

[문제21] 0번 index에 튀김, 튀김, 떡복이 한꺼번에 추가하세요
food[0][2:2] = ['튀김', '튀김', '떡볶이']
food[0].extend(['튀김', '튀김', '떡볶이'])

[문제22] 2번 index에 2번 위치에 유산슬 추가하세요
food[2].insert(2, '유산슬')

[문제23] 튀김 갯수를 세어주세요
food[0].count('튀김')

[문제24] 0번 index만 정렬해주세요
food[0].sort()

[문제25] 0번 index에 마지막 데이터 삭제하세요
food[0].pop()

[문제26] 숫자를 입력값으로 받아서 짝수인지 홀수인지를 출력하는 프로그램을 만드세요.

if int(input())%2:
    print('홀수')
else:
    print('짝수')
[문제27]한글, alphabet만 입력받아야 합니다. 만약에 다른 문자가 들어 오면 "한글, alphabet 이외의 문자가 포함되어 있습니다." 라는 문구가 출력해야 하고 아니면 입력받은 문자를 출력하세요.

char = input()
if char.isalpha():
    print(char)
else:
    print('한글, alphabet 이외의 문자가 포함되어 있습니다')
`
[문제28] 숫자를 입력값으로 받습니다. 만약 숫자가 이외의 값이 들어 오면 "숫자 이외의 문자가 포함되어 있습니다." 아니면 숫자 출력하세요.

char = input()
if char.isnumeric():
    print(char)
else:
    print('숫자 이외의 문자가 포함되어 있습니다')
[문제29] 1부터 100까지 합을 구하세요.

i = 1
sum = 0
while i <= 100:
    sum += i
    i += 1
print(sum)
[문제30] 단을 입력값으로 받아서 구구단을 출력하세요.

# for문
dan = int(input())
print('구구단 '+str(dan)+'단 입니다.')
for i in range(1,10):
    print('{} x {} = {}'.format(dan, i, dan*i))

# while문
dan = int(input())
print('구구단 '+str(dan)+'단 입니다.')
i = 1
while i <= 9:
    print('{} x {} = {}'.format(dan, i, dan*i))
    i += 1

[문제30] 1부터 100까지의 3의 배수를 출력, 합을 구하세요. while문을 이용하세요.

i = 0
total = 0
while True:
    i += 1
    if i%3 == 0:
        print(i)
        total += i
    if i == 100:
        print('1부터 100까지 3의 배수의 합은 {}입니다.'.format(total))
        break   
[문제31] 조건이 없는 상태에서 1부터 10까지 3,5를 제외한 합을 구하세요. continue문, break문을 이용하세요.

i = 0
total = 0
while True:
    i += 1
    if i == 3 or i == 5:
        continue
    elif i > 10:
        print(total)
        break
    else:
        total += i
[문제32] 리스트 변수에 18,2,3,1,4,5,7,8,9,10,11,15,16 값이 들어 있습니다. 짝수만 합을 구하세요.

while문

data = [18,2,3,1,4,5,7,8,9,10,11,15,16]
i = 0
total = 0
while i < len(data):
    if data[i]%2 == 0:
        total += data[i]
    i += 1
print(total)
for문

data = [18,2,3,1,4,5,7,8,9,10,11,15,16]
total = 0
for i in data:
    if i%2==0:
        total+=i
print(total)
[문제33] 구구단을 생성하세요

dan = 2
while dan <= 9:
    coef = 1
    print('구구단 {}단 입니다.'.format(dan))
    while coef <= 9:
        print('{} x {} = {}'.format(dan, coef, dan*coef))
        coef += 1
    dan+=1
[문제34] 리스트 변수에 12,3,21,4,5,7,33,2,18,9,10,31,15,16 값이 들어 있습니다. 최대값을 구하세요.

data = [12,3,21,4,5,7,33,2,18,9,10,31,15,16]
max(data)
while문

i = 0
v_Max = data[0]
while i < len(data):
    i += 1
    if v_Max < data[i]:
        v_Max = data[i]
print(v_Max)
for문

v_Max = data[0]
for i in data:
    if v_Max < i:
        v_Max = i
print(v_Max)
[문제35] 리스트 변수에 12,3,21,4,5,7,33,2,18,9,10,31,15,16 값이 들어 있습니다. 최소값을 구하세요.

data = [12,3,21,4,5,7,33,2,18,9,10,31,15,16]
min(data)
while문

i = 1
v_Min = data[0]
while i < len(data):
    if v_Min > data[i]:
        v_Min = data[i]
    i += 1
print(v_Min)
for문

v_Min = data[0]
for i in data:
    if v_Min > i:
        v_Min = i
print(v_Min)
[문제36] 학생들의 점수가 90,55,63,78,80 점이 있습니다. 60점 이상이면 합격, 60점 미만이면 불합격 출력해 주세요.

scores = [90,55,63,78,80]
for score in scores:
    if score >= 60:
        print(score, '점 합격')
    else:
        print(score, '점 불합격')
[문제37] 1부터 100까지 합을 구하세요.(for 이용)

total = 0
for i in range(1, 101):
    total += i
print(total)
[문제38] 1부터 10까지 출력하세요. 단 4, 8은 제외(for 이용)

for i in range(1, 11):
    if i == 4 or i == 8:
        continue
    else:
        print(i)
[문제39] 화면과 같이 출력하세요.(for 이용)

가로의 숫자를 입력하세요 : 5 세로의 숫자를 입력하세요 : 5 ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★ ★

col = int(input('가로의 숫자를 입력하세요 :'))
row = int(input('세로의 숫자를 입력하세요 :'))
for i in range(row):
    print('★'*col)
[문제40] 구구단을 출력하세요.(for 이용)

for i in range(2, 10):
    print('구구단', i, '단 입니다.')
    for j in range(1, 10):
        print(i, 'x', j, '=', i*j)
[문제41] 구구단을 만드세요. 2단에서 9단까지만 입력하세요, [0은 구구단 전부를 출력합니다.]:

dan = int(input('2단에서 9단까지만 입력하세요, [0은 구구단 전부를 출력합니다]:'))
if dan == 0:
    for i in range(2, 10):
        print('구구단', i, '단 입니다.')
        for j in range(1, 10):
            print(i, 'x', j, '=', i*j)
elif 2 <= dan <= 9:
    print('구구단', dan, '단 입니다.')
    for j in range(1, 10):
        print(dan, 'x', j, '=', dan*j)
else:
    print('올바른 단 수를 입력하세요.')
[문제42]lst 변수에 a,b,c,d값이 있습니다. for문을 이용하여 아래화면과 같이 출력하세요. 0번 a값이 있습니다. 1번 b값이 있습니다. 2번 c값이 있습니다. 3번 d값이 있습니다.

lst = ['a','b','c','d']
for i in range(len(lst)):
    print('{}번 {}값이 있습니다'.format(i, lst[i]))
[문제43] 1부터 9까지 x 리스트 변수에 입력하세요. y변수는 x 변수의 값을 2곱한 값으로 입력해주세요.

x = list(range(1,10))
y = []
for i in x:
    y.append(i*2)
print(y)
[문제44] apple, banana, orange 리스트 변수에 값을 입력하시고 이 값들의 길이를 출력해주세요.

lst = ['apple', 'banana','orange']
for word in lst:
    print(len(word))
print([len(word) for word in lst])
[문제45] 변수에 아래와 같이 들어 있습니다. 아래처럼 결과를 출력하세요.
lst1 = [1,2,3]
lst2 = [4,5,6]
출력결과
[4, 5, 6, 8, 10, 12, 12, 15, 18]

lst1 = [1,2,3]
lst2 = [4,5,6]
result = []
for i in lst1:
    for j in lst2:
        result.append(i*j)
print(result)
print([i*j for i in lst1 for j in lst2])
[문제46] 1부터 100까지 값중에 짝수만 x변수에 입력해주세요.

x = []
for i in range(1, 101):
    if i%2 == 0:
        x.append(i)
print(x)
x = [i for i in range(1, 101) if i%2 == 0]
print(x)

[문제47] 튜플변수에 사과, 귤, 오렌지, 배, 포도, 바나나, 자몽, 키위, 딸기, 블루베리, 망고를 입력하시고 과일이름중에 세글자 이상인 과일만 fruit_lst변수에 입력해주세요.

fruits = ('사과', '귤', '오렌지', '배', '포도', '바나나', '자몽','키위', '딸기','블루베리', '망고')
[fruit for fruit in fruits if len(fruit) >= 3]
[문제48] 과일판매 현황을 dictionary 변수로 생성하세요. 과일 이름을 키로 하고 수량은 값으로 표현한후 과일이름만 대문자로 출력해주세요. apple 100 , banana 300, orange 300

sales = {'apple':100, 'banana':300, 'orange':300}
for name in sales.keys():
    print(name.upper())
[i.upper() for i in list(sale.keys())]

for i in sale.keys():
    print(i.upper(), end=',')

for i,v in sale.items(): # items는 키와 값을 모두 불러와야 하므로 변수를 2개 지정해야 한다.
    print(i.upper()+':'+str(v),end=',\0') # 값을 문자 숫자 붙이려 하면 str을 통해서 형변환 하여 붙인다.

[i.upper() for i in sale.keys()]
[[i.upper(),v] for i,v in sale.items()] # i,v 둘다 값을 불러야 하기 떄문에 [[]] 괄호를 두번해야 한다.
[문제49] 함수에 두 개의 숫자를 입력 값으로 받아서 값을 비교 하는 프로그램을 작성하세요.

def num_compare(a,b):
    if a > b:
        print('{}가 {}보다 큰 수 입니다.'.format(a,b))
        return a
    elif a < b:
        print('{}가 {}보다 큰 수 입니다.'.format(b,a))
        return b
    elif a == b:
        print('{}와 {}는 같은 수 입니다.'.format(a,b))
        return a
[문제50] 두 인수값을 받아서 합한 값을 리턴해주는 sum함수를 생성하세요.

def sum(a, b):
    return a+b
[문제51] 다음과 같은 함수를 만드시오.

cal("sum",1,2,3,4,5) - 15
cal("multiply",1,2,3,4,5) - 120
def cal(do, *nums):
    if do == 'sum':
        result = 0
        for num in nums:
            result += num
        return result
    elif do == 'multiply':
        result = 1
        for num in nums:
            result *= num
        return result
[문제52] 여러 숫자를 인수값으로 받아서 합과 평균을 출력하는 aggF함수를 생성하세요.

aggF(1,2,3,4,5,6,7,8,9,10)

합 :  55
평균 : 5.5 
def aggF(*nums):
    nsum = 0
    for num in nums:
        nsum += num
    print('합 :', nsum,'\n평균 :', nsum/len(nums))
    return nsum,nsum/len(nums)
[문제53] 입력값을 누적해서 더하는 함수를 작성하세요.

print(add(2))
2

print(add(8))
10
total = 0
def add(n):
    global total
    total += n
    return total
[문제54] 아래와 같이 변수에 값이 들어 있습니다. exchang함수에 x변수에 값을 넣으면 y로 변환하는 함수를 만드세요.

x = ["귀도","반","로섬"]
y = ["Guido","van", "Rossum"]
x = ["귀도","반","로섬"]
y = ["Guido","van", "Rossum"]

def exchang(x):
    for i in range(len(x)):
        x[i] = y[i]
    print(x)
[문제55]약수를 구하는 divisor 함수를 생성하세요.

1이상의 숫자를 입력하세요: 100
[100, 50, 25, 20, 10, 5, 4, 2, 1]
def divisor(num):
    result = []
    num = int(input('1이상의 숫자를 입력하세요: '))
    for i in range(num,0,-1):
        if num%i == 0:
            result.append(i)
    return result

[문제56] 여러 값을 동일한 변수에 순차적으로 저장할수 있는 용도의 변수 타입과 부호는 ?

리스트   
[]   
[문제57] x 리스트 변수에 1, 3, 5, 7, 9 를 입력하세요

x = [1,3,5,7,9]
[문제58] x 변수에 타입을 확인하세요.

type(x)
[문제59] x변수에 첫번째값을 확인해주세요

x[0]
[문제60] x변수에 제일뒤에 값을 확인해주세요

x[-1]
[문제61] x변수에 10를 제일 뒤에 추가해주세요.

x.append(10)
[문제62] x변수에 있는 값들중에 10을 삭제해주세요

x.remove(10)
[문제63] x변수에 1번색인위치에 2를 입력하세요.

x.insert(1,2)
[문제64] x변수에 1번색인값을 제거해주세요.

del x[1]
[문제65] x 변수에 첫번째 부터 세번째까지 값을 출력해주세요.

x[0:3]
[문제66] x 변수에 제일뒤에서 두개 값을 출력해주세요.

x[-2:]
[문제67] x 변수를 y변수에 대입한 후 y변수에 11을 추가한 후 x값도 확인 한 후 분석해주세요.

y = x
y.append(11)
x 
[1, 3, 5, 7, 9, 11] # x, y는 동일한 객체를 담고있기에 같이 변형됨
[문제68] x변수를 z변수에 복사하지만 고유한 변수로 생성해주시고 z변수에 13을 추가 해주세요.

z = x[:]
z.append(13)
[문제69]

x = [1,2,3]
y = [4,5,6]
y변수에 값을 x 변수에 넣어주세요.

x = [1,2,3]
y = [4,5,6]
x.extend(y)
[문제70] x 변수에 1번 인덱스의 값을 제거해주세요.

del x[1]
[문제71] x변수에 1번 부터 3번 인덱스를 제거해주세요.

del x[1:4]  
[문제72] 중첩리스트를 이용할때 첫번째 항목의 첫번째 항목의 값을 추출해주세요.

 x[0][0]
[문제73] 리스트형과 비슷하지만 요소의 값을 변경 할 수 없는 타입과 부호는 ?

튜플   
()   
[문제74] 키, 값을 저장하는 데이터 타입과 부호는 ?

딕셔너리   
{}    
[문제75] 아래와 같은 내용을 변수에 입력해주세요. 변수이름은 dict

이름 : '홍길동'
나이 : 30
직업 : '파이썬개발자'
dict = {'이름':'홍길동', '나이':30, '직업':'파이썬개발자'}
[문제76] dict변수 키를 출력하세요.

dict.keys()
[문제77] dict변수 값을 출력하세요.

dict.values()
[문제78] dict변수의 키, 값을 출력해주세요.

dict.items()
[문제79] dict변수의 이름만 출력해주세요.

dict['이름']
[문제80] dict변수의 주소 = '서울' 추가해주세요

dict['주소'] = '서울'
[문제81] dict변수의 나이값을 32 수정하세요.

dict['나이'] = 32
[문제82] 최대공약수를 재귀함수로 구현해보세요

 def gcd(a,b):
     if b == 0:
         return a
     else:
         return gcd(b, a%b)
[문제83] stddev(2,3,1,7) 표준편차를 구하세요. stddev함수를 생성하세요.

평균 = 관측값의 합 / 데이터수
편차 = 관측값 - 평균
편차 제곱합 = (편차**2)+(편차**2)
분산 = 편차제곱합/데이터수(자유도)
표준편차 = math.sqrt(분산)
import math
math.sqrt(분산)
# 하나의 함수로 작성
def stddev(*nums):
    avg = sum(nums)/len(nums)
    dev = [n-avg for n in nums]
    var = sum([n**2 for n in dev])/(len(nums)-1)
    import math
    return math.sqrt(var)
# 각각의 함수로 작성
def avg(*nums):
    return sum(nums)/len(nums)

def dev(*nums):
    return [n-avg(*nums) for n in nums]

def var(*nums):
    return sum([n**2 for n in dev(*nums)])/(len(nums)-1)

def stddev(*nums):
    import math
    return math.sqrt(var(*nums))
# 람다
def stddev(*nums):
    avg = lambda nums: sum(nums)/len(nums)
    dev = lambda nums: [n-avg(nums) for n in nums]
    var = lambda nums: sum([n**2 for n in dev(nums)])/(len(nums)-1)
    import math
    return math.sqrt(var(nums))
[문제84] stats 모듈에 평균, 분산, 표준편차함수를 사용할수 있는 프로그램을 생성하세요.

>>> import stats
>>> stats.mean(1,2,3,4,5)
3.0
>>> stats.variance(1,2,3,4,5)
2.5
>>> stats.stddev(1,2,3,4,5)
1.5811388300841898
# stats.py파일 생성
def mean(*nums):
    return sum(nums)/len(nums)

def dev(*nums):
    return [n-mean(*nums) for n in nums]

def variance(*nums):
    return sum([n**2 for n in dev(*nums)])/(len(nums)-1)

def stddev(*nums):
    import math
    return math.sqrt(variance(*nums))

# 실행
import sys
sys.path.append('c:\\python')
import stats
stats.mean(1,2,3,4,5)
stats.variance(1,2,3,4,5)
stats.stddev(1,2,3,4,5)

[문제85] 프로그램을 생성하세요.

액수입력 : 362
화폐단위를 입력하세요 : 100 50 1
1원 : 12개
50원 : 1개
100원 : 3개
total = int(input('액수입력 : '))
units = sorted(map(int, input('화폐단위를 입력하세요 : ').split()), reverse=True)
result = {}
for unit in units:
    result[unit] = total//unit
    total = total%unit
for unit in sorted(units):
    print('{}원 : {}개'.format(unit, result[unit]))
# 선생님 답
def coinGreedy(money, cash_type):
    cash_type.sort(reverse=True)  
    remain = money 
    res = {}  
    for cash in cash_type:
        dvmd = divmod(remain,cash)
        res[cash] = dvmd[0]
        remain = dvmd[1] 
    return res

money = int(input('액수입력 : '))
cash_type = [int(x) for x in input('화폐단위를 입력하세요 : ').split(' ')]
res = coinGreedy(money,cash_type)
for k,v in res.items():
    print('{0}원 : {1}개'.format(k,v))

# 딕셔너리 정렬
import operator
for k,v in sorted(res.items(), key=operator.itemgetter(0)):
    print('{0}원 : {1}개'.format(k,v))
for k,v in sorted(res.items(), key=operator.itemgetter(1)):
    print('{0}원 : {1}개'.format(k,v))
for k,v in sorted(res.items(), key=operator.itemgetter(0), reverse=True):
    print('{0}원 : {1}개'.format(k,v))
for k,v in sorted(res.items(), key=operator.itemgetter(1), reverse=True):
    print('{0}원 : {1}개'.format(k,v))
[문제86] 숫자를 입력값으로 받은 후 짝수인지 홀수 인지를 출력한후 그 숫자값을 기준으로 짝수면 짝수형식의 증가값으로 10개 출력, 홀수면 홀수형식의 증가값으로 10개 출력합니다. 만약에 숫자가 들어 오지 않으면 예외사항처리하세요.

숫자를 입력해주세요 : 10
짝수
10
12
14
16
18
20
22
24
26
28
>>> 

숫자를 입력해주세요 : 11
홀수
11
13
15
17
19
21
23
25
27
29

숫자를 입력해주세요 : 이십
invalid literal for int() with base 10: '이십'
숫자를 입력하세요
try:
    num = int(input('숫자를 입력해주세요 : '))
    if num%2 == 0:
        print('짝수')
    else:
        print('홀수')
    for i in range(10):
        print(num + (2*i))
except ValueError as error:
    print(error)
    print('숫자를 입력하세요')
except Exception as error:
    print(error)
    print('오류가 발생했습니다.')
[문제87] 오늘이 무슨 요일인지 출력해주세요.

import datetime
days = ['월','화','수','목','금','토', '일']
print(days[datetime.datetime.today().weekday()]+'요일')
[문제88] 함수의 인수값으로 현재 날짜, 일수 정보를 입력받아서 더한 날짜 정보를 리턴하는 next_day함수를 생성하세요.

def next_day(t, d):
    import datetime as dt
    try:
        result = dt.datetime.strftime(t+dt.timedelta(days=d), '%Y %m %d').split()
        print('{} 일 후의 날짜는 {} 년 {} 월 {} 일 입니다.'.format(d, result[0], result[1], result[2]))
        return result
    except Exception as error:
        print(error)
[문제89] 아래와 같은 결과가 출력될수 있도록 프로그램을 생성하세요

1에서 천만까지 짝수합, 홀수합 구합니다
1에서 천만까지 짝수합: 24999995000000
1에서 천만까지 홀수합: 25000000000000
처리시간 : 0:00:01.950003
처리시간 millisecond(1/1000)  : 1950ms
from datetime import datetime as dt
start = dt.now()
print('1에서 천만까지 짝수합, 홀수합 구합니다')
odd_sum = 0
even_sum = 0
for i in range(1, 10000001): 
    if i%2 ==0:
        even_sum += i
    else:
        odd_sum += i

end = dt.now()
delta = end - start
print('1에서 천만까지 짝수합:', even_sum)
print('1에서 천만까지 홀수합:', odd_sum)
print('처리시간 :', delta)
print('처리시간 millisecond(1/1000) : {}ms'.format(round(delta.total_seconds()*1000)))